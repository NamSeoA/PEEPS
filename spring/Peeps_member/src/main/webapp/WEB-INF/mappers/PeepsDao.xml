<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.gnjk.peeps.dao.PeepsDao">

	<!-- 회원가입 -->
	<insert id="insertMember"
		parameterType="com.gnjk.peeps.domain.Peeps" useGeneratedKeys="true"
		keyProperty="m_idx">
		insert into member (email, id,
		password, name, code) values
		(#{email}, #{id},#{password},#{name},
		#{code});
	</insert>



	<!-- 소셜 로그인 시 회원 이메일 있는지 확인 -->
	<select id="selectMemberByEmailCount" resultType="int">
		select count(*)
		from member where email=#{email}
	</select>

	<!-- 소셜 로그인 시 회원 이메일이 있다면 로그인 타입이 일치하는지 확인 -->
	<select id="selectLoginTypeByEmailCount" resultType="String">
		select
		loginType from member where email=#{email}
	</select>



	<!-- 이메일 없으면 이메일, 이름, 사진, 로그인 타입 insert 하기 -->
	<insert id="insertSocialMember"
		parameterType="com.gnjk.peeps.domain.Peeps" useGeneratedKeys="true"
		keyProperty="m_idx">
		insert into member (email, id, password, m_photo, name,
		loginType, verify) values (#{email},
		#{id},#{password},#{m_photo},#{name}, #{loginType}, 'Y');
	</insert>


	<!-- 아이디 중복 확인 -->
	<select id="selectMemberByIdCount" resultType="int">
		select count(*)
		from member where id=#{id}
	</select>

	<!-- 이메일 인증 -->
	<select id="selectMemberByIdxVerify" resultType="int">
		select count(*)
		from member where m_idx=#{m_idx} and verify='Y'
	</select>

	<!-- 이메일 인증 상태 업데이트 -->
	<update id="updateMemberVerify">
		update member set verify='Y' where m_idx=#{param1}
		and code=#{param2}
	</update>

	<!-- 로그인 -->
	<resultMap id="memberResult"
		type="com.gnjk.peeps.domain.Peeps">
		<id column="m_idx" property="m_idx" />
		<result column="email" property="email" />
		<result column="id" property="id" />
		<result column="name" property="name" />
		<result column="password" property="password" />
		<result column="m_photo" property="m_photo" />
	</resultMap>

	<select id="selectLogin" resultMap="memberResult">
		select * from member where
		email=#{param1} and password=#{param2}
	</select>
	
	<!-- 아이디 검색 -->
	<select id="search_user" resultType="int">
		select count(*) from member where  email = #{email} and id = #{id}
	</select>

	<!-- 비밀번호 찾기 실행 시 비밀번호 변경 -->
	<select id="updatePw" parameterType="map">
		update member set
		password=#{password} where email = #{email} and id = #{id}
	</select>

	
</mapper>
